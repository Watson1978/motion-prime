#!/usr/bin/env ruby

require 'optparse'
require 'methadone'
require_relative '../motion-prime/version'

class App
  include Methadone::Main
  include Methadone::CLILogging
  include Methadone::SH
  
  main do |command, opt|
    case command.to_sym
    when :new then create(opt)
    else help
    end
    0
  end

  def self.help
    info "Command line tools for MotionPrime"
    info "Commands:"
    info "  new <appname>"
    info "    Creates a new MotionPrime app from a template."
  end

  def self.create(name)
    return puts "Usage: prime new <appname>" unless name.to_s.length > 0
    info "Creating new MotionPrime iOS app: #{name}"
    if false
      sh "motion create #{name} --template=git://github.com/droidlabs/motion-prime.git"
    else
      clone_template
      sh "motion create #{name} --template=motion-prime"
    end
    info "Command: bundle instal"
    sh "cd ./#{name}; bundle install"
    info "Command: pod setup"
    sh "cd ./#{name}; pod setup"
    info "Command: rake pod:install"
    sh "cd ./#{name}; rake pod:install"
  end

  def self.home_path
    ENV['HOME'].split('/')[0..2].join('/')
  end

  def self.repo_url
    "git://github.com/droidlabs/motion-prime.git"
  end

  def self.clone_template
    path = File.expand_path(File.join(home_path, 'Library/RubyMotion/template', 'motion-prime'))
    git_clone(path)
  end

  def self.git_clone(path)
    if File.exist?(path)
      system("git --work-tree=#{path} --git-dir=#{path}/.git pull origin master")
    else
      system("git clone #{repo_url} #{path}")
    end
  end

  description "Command line tools for MotionPrime"

  arg :command
  arg :opt, :optional

  version MotionPrime::VERSION

  go!
end